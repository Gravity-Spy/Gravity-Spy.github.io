.. _examples:

#########################
Querying Gravity Spy data
#########################

============
Introduction
============

We will use `gwpy <https://gwpy.github.io/>`_, the preferred detchar software utility.

The method of note is `gwpy.table.EventTable.fetch <https://gwpy.github.io/docs/latest/api/gwpy.table.EventTable.html#gwpy.table.EventTable.fetch>`_

The following example will although you to query the entire gravity spy trianingset. You do *not* need to be on CIT *but* if you do not have lal installed locally it is suggested that you do this on CIT.

Ahead of time, it is encourage to set up your user environment. For LIGO users please see `Gravity Spy Authentication <https://secrets.ligo.org/secrets/144/>`_ for information concerning authentication to access certain Gravity Spy DBs.

============
Installation
============

Very brief installation! Create a virtualenv on the clusters and `pip install`

.. code-block:: bash

   $ virtualenv --system-site-packages ~/LAAC/opt/
   $ . ~/LAAC/opt/bin/activate
   $ pip install --upgrade pip
   $ pip install gwpy sqlalchemy psycopg2 pandas git+https://github.com/duncanmmacleod/ligo.org.git

=======================
Pre-Existing VirtualEnv
=======================

On CIT

.. code-block:: bash

   $ . /home/gravityspy/opt/GravitySpy/bin/activate

=======================
The `glitches` database
=======================

.. code-block:: bash

   $ kinit albert.einstein
   $ ipython

    >>> from gwpy.table import EventTable
    >>> trainingset = EventTable.fetch('gravityspy','trainingset')
    >>> trainingset.download(nproc=8, TrainingSet=1, LabelledSamples=1)

================
Training a model 
================

.. code-block:: bash

   $ ipython

    $ kinit albert.einstein
    >>> from gwpy.table import EventTable
    >>> from astropy.table import vstack
    >>> blips = EventTable.fetch('gravityspy', 'trainingset', selection='Label=Blip')
    >>> whistle = EventTable.fetch('gravityspy', 'trainingset', selection='Label=Whistle')
    >>> # Downselect to 100 samples (otherwise the download takes too long)
    >>> blips = blips[0:100]
    >>> whistle = whistle[0:100]
    >>> trainingset = vstack([whistle, blips])
    >>> trainingset.download(nproc=4, TrainingSet=1, LabelledSamples=1)
